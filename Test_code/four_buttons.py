# -*- coding: utf-8 -*-
# 这个GUI界面仅仅做测试用
# Form implementation generated from reading ui file 'FOUR_BUTTON.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys

# 导入其他功能，如灯带控制、舵机开启、推杆控制的模块
import duoji
import motor
import cleaner

class Ui_MainWindow(object):

    # @staticmethod
    # def change_button_stylesheet(button_b:QtWidgets.QPushButton ):
    #     button_b.setGeometry(QtCore.QRect(540, 240, 3, 4))
    #     button_b.repaint()
    # 在使用静态方法的时候不能够调用类内部的属性

    def __init__(self,MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.is_4_button_clicked = [False, False, False, False]

    def change_button_4_stylesheet(self):
        if not self.is_4_button_clicked:
            self.pushButton_4.setGeometry(QtCore.QRect(510, 240, 30, 10))
            self.is_4_button_clicked = True
        else:
            self.is_4_button_clicked = False
            self.pushButton_4.setGeometry(QtCore.QRect(510, 240, 93, 28))
        self.pushButton_4.repaint()

    def change_button_1_clicked_status(self):
        if self.is_4_button_clicked[0]:
            self.is_4_button_clicked[0] = False
        else:
            self.is_4_button_clicked[0] = True

    def change_button_2_clicked_status(self):
        if self.is_4_button_clicked[1]:
            self.is_4_button_clicked[1] = False
        else:
            self.is_4_button_clicked = True

    def change_button_3_clicked_status(self):
        if self.is_4_button_clicked[2]:
            self.is_4_button_clicked[2] = False
        else:
            self.is_4_button_clicked[2] = True

    def change_button_4_clicked_status(self):
        if self.is_4_button_clicked[3]:
            self.is_4_button_clicked[3] = False
        else:
            self.is_4_button_clicked[3] = True

    def setupUi(self, MainWindow, motor_a: motor.motor_substitute_temp, duoji_unreusable: duoji.duoji, cleaner_a:cleaner.cleaner):

        # 这个A按钮按下以后舵机会运动并且其他按钮锁定
        self.pushButton_1.setGeometry(QtCore.QRect(50, 240, 93, 28))
        self.pushButton_1.setObjectName("pushButton")
        self.pushButton_1.clicked.connect(None)
        self.pushButton_1.clicked.connect(self.change_button_1_clicked_status)

        # 这个B按钮按下以后推杆会上升并且其他按钮锁定。一般情况下锁定，可以设定为判断是否开盖解除锁定
        self.pushButton_2.setGeometry(QtCore.QRect(200, 240, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(motor_a.motor_Test)
        self.pushButton_2.clicked.connect(self.change_button_2_clicked_status)

        # 这个按钮C按下以后会持续打印一串字符，表示进入清洁模式
        self.pushButton_3.setGeometry(QtCore.QRect(360, 240, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(cleaner_a.print_out_status)
        self.pushButton_3.clicked.connect(self.change_button_3_clicked_status)

        # 这个按钮D按下以后加热装置启动。一般情况下锁定，需要按钮C按下以后才解锁定
        # 绑定点击事件

        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.setGeometry(QtCore.QRect(510, 240, 93, 28))
        self.pushButton_4.clicked.connect(self.change_button_4_stylesheet)
        self.pushButton_4.clicked.connect(self.change_button_4_clicked_status)


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_1.setText(_translate("MainWindow", "A"))
        self.pushButton_2.setText(_translate("MainWindow", "B"))
        self.pushButton_3.setText(_translate("MainWindow", "C"))
        self.pushButton_4.setText(_translate("MainWindow", "D"))
